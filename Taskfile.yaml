version: '3'

dotenv: [.env.prod, .env]

tasks:
  up:
    cmds:
      - docker-compose --env-file .env.prod up --build

  build:
    deps: [containers-rmi]
    cmds:
      - echo "Running docker-compose up"
      - docker-compose --env-file .env.prod up

  rebuild:
    deps: [libs, containers-rmi]
    cmds:
      - echo "Running docker-compose up --build"
      - docker-compose --env-file .env.prod up --build

  libs:
    deps: [libs-go, libs-ts]
    cmds:
      - echo "Generated libs images âœ…"

  libs-go:
    cmds:
      - docker build -f Dockerfile.go.libs -t go/libs .
  libs-ts:
    cmds:
      - docker build -f Dockerfile.ts.libs -t ts/libs .

  containers-rmi:
    silent: true
    cmds:
      - echo "Removing old containers..."
      - docker rmi -f v2-$TWIRP_GATEWAY
      - docker rmi -f v2-$AUTH_BACKEND
      - docker rmi -f v2-$HASHMAP_BACKEND
      - docker rmi -f v2-$AUTH_FRONTEND
      - docker rmi -f v2-$HASHMAP_FRONTEND
    env:
      TWIRP_GATEWAY: twirp_gateway
      AUTH_BACKEND: auth_backend
      HASHMAP_BACKEND: hashmap_backend
      AUTH_FRONTEND: auth_frontend
      HASHMAP_FRONTEND: hashmap_frontend

  rust-orm:
    cmds:
      - cd libs/database && sea-orm-cli generate entity -u postgres://postgres:postgres@localhost/makoto -o src/models --ignore-tables user_tokens,user_data,hashmap_items,hashmap_tags,hashmap_item_tags

  go-test:
    env:
      EMAIL_TEST_DISABLED: true
    cmds:
      - cd apps/hashmap/internal/utils && go test
      - cd apps/auth/internal/utils && go test

  protoc-twirp-go:
    env:
      TWIRP_GO_COMPILE: true
    cmds:
      - cd libs/grpc && cargo run

  protoc-twirp-ts:
    env:
      TWIRP_TS_COMPILE: true
    cmds:
      - cd libs/grpc && cargo run

  protoc-twirp:
    cmds:
      - task: protoc-twirp-ts
      - task: protoc-twirp-go

  grpc-go:
    env:
      GRPC_GO_COMPILE: true
    cmds:
      - cd libs/grpc && cargo run
