version: '3'

services:
  twirp_gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/twirp/Dockerfile
    ports:
      - ${TWIRP_GATEWAY_PORT}:4000
    container_name: twirp_gateway
    env_file:
      - .env.prod

  auth_backend:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    ports:
      - ${AUTH_PORT}:4000
    container_name: auth_backend
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy

  hashmap_backend:
    build:
      context: .
      dockerfile: ./apps/hashmap/Dockerfile
    ports:
      - ${HASHMAP_PORT}:4000
    container_name: hashmap_backend
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy

  auth_frontend:
    build:
      context: .
      dockerfile: ./frontend/auth/Dockerfile
    ports:
      - ${AUTH_FRONTEND_PORT}:3000
    container_name: auth_frontend
    env_file:
      - .env.prod

  hashmap_frontend:
    build:
      context: .
      dockerfile: ./frontend/hashmap/Dockerfile
    ports:
      - ${HASHMAP_FRONTEND_PORT}:3000
    container_name: hashmap_frontend
    env_file:
      - .env.prod

  db:
    restart: always
    image: postgres:latest
    container_name: makoto_postgres
    volumes:
      - makoto_db:/var/lib/postgresql/makoto/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - 5435:5432

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "makoto.web3@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    logging:
      driver: none

volumes:
  makoto_db:
  pgadmin_data:
