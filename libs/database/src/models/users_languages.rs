//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users_languages")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_info_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub language_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::languages::Entity",
        from = "Column::LanguageId",
        to = "super::languages::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Languages,
    #[sea_orm(
        belongs_to = "super::user_infos::Entity",
        from = "Column::UserInfoId",
        to = "super::user_infos::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    UserInfos,
}

impl Related<super::languages::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Languages.def()
    }
}

impl Related<super::user_infos::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserInfos.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
