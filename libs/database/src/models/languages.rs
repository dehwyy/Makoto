//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "languages")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_type = "Text", unique)]
    pub lang: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::users_languages::Entity")]
    UsersLanguages,
}

impl Related<super::users_languages::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UsersLanguages.def()
    }
}

impl Related<super::user_infos::Entity> for Entity {
    fn to() -> RelationDef {
        super::users_languages::Relation::UserInfos.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::users_languages::Relation::Languages.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
